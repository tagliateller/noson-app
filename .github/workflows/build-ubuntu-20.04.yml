name: build ubuntu-20.04

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: "sudo apt-get update && sudo apt-get install libflac-dev libflac++-dev libpulse-dev
              qtbase5-dev qttools5-dev qttools5-dev-tools qtdeclarative5-dev
              qtdeclarative5-dev-tools qtquickcontrols2-5-dev libqt5svg5-dev
              qml-module-qt-labs-settings qml-module-qtgraphicaleffects
              qml-module-qtqml-models2 qml-module-qtquick2
              qml-module-qtquick-controls2 qml-module-qtquick-layouts
              qml-module-qtquick-particles2 qml-module-qtquick-templates2
              qml-module-qtquick-window2 libqt5dbus5 libqt5svg5
              zlib1g-dev libssl-dev libpulse-dev libflac-dev libflac++-dev
              libdbus-1-dev"
      - name: Init submodules
        run: git submodule init && git submodule update
      - name: Configure build
        run: "cmake -B build
                    -Wno-dev"
      - name: Build
        run:  cmake --build build

  release:
    name: Release Linux Package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 1
          format: 'YYYY-MM-DD-HH-mm-ss'    
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: list directory output
        run: ls /home/runner/work/noson-app/noson-app/apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: Release Ubuntu 20.04 Package ${{ steps.time.outputs.time }} 
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/noson-app/noson-app/apk/noson-gui-arm64-v8a-debug.apk
          asset_name: noson-gui-arm64-v8a-debug.apk # noson-gui-arm64-v8a-debug.apk
          asset_content_type: application/zip
