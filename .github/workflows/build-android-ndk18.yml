name: build android ndk18

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Run sdkmanager update
        run:  ${ANDROID_HOME}/tools/bin/sdkmanager --update
      - name: Install android platform, tools, ndk
        run:  ${ANDROID_HOME}/tools/bin/sdkmanager --install "platform-tools" "platforms;android-24" "build-tools;29.0.2" "ndk;18.1.5063045"
      - name: Dump Android NDK
        run: "ls ${ANDROID_HOME}/ndk"
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt/5.12.9/android_arm64_v8a
          key: ${{ runner.os }}-QtCache-5129-android_arm64_v8a
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.9'
          host: 'linux'
          target: 'android'
          arch: 'android_arm64_v8a'
          modules: android
          install-deps: 'true'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Dump Qt DIR
        run:  echo ${Qt5_DIR}
      - name: Init submodules
        run: git submodule init && git submodule update
      - name: Configure manifest
        run: cp android/AndroidManifest.xml.in.ndk18 android/AndroidManifest.xml.in
      - name: Configure build
        run: "cmake -B build
                    -DCMAKE_SYSTEM_NAME=Android
                    -DCMAKE_PREFIX_PATH=${Qt5_DIR}
                    -DCMAKE_TOOLCHAIN_FILE=${ANDROID_HOME}/ndk/18.1.5063045/build/cmake/android.toolchain.cmake
                    -DCMAKE_MAKE_PROGRAM=${ANDROID_HOME}/ndk/18.1.5063045/prebuilt/linux-x86_64/bin/make
                    -DANDROID_ABI=arm64-v8a
                    -DANDROID_STL_PREFIX=llvm-libc++
                    -DANDROID_STL_SHARED_LIBRARIES=c++_shared
                    -DANDROID_SDK_MINVER=24
                    -DANDROID_SDK_TARGET=26
                    -DANDROID_NATIVE_API_LEVEL=16
                    -DQT_ANDROID_PLATFORM_LEVEL=16
                    -DQT_ANDROID_TOOL_PREFIX=aarch64-linux-android
                    -DQT_ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}
                    -DQT_ANDROID_NDK_ROOT=${ANDROID_HOME}/ndk/18.1.5063045
                    -DQT_ANDROID_QT_ROOT=${Qt5_DIR}
                    -DQT_ANDROID_SDK_BUILDTOOLS_REVISION=21.0.0
                    -DQt5_DIR=${Qt5_DIR}/lib/cmake/Qt5
                    -DQt5Core_DIR=${Qt5_DIR}/lib/cmake/Qt5Core
                    -DQt5Gui_DIR=${Qt5_DIR}/lib/cmake/Qt5Gui
                    -DQt5Qml_DIR=${Qt5_DIR}/lib/cmake/Qt5Qml
                    -DQt5Network_DIR=${Qt5_DIR}/lib/cmake/Qt5Network
                    -DQt5Quick_DIR=${Qt5_DIR}/lib/cmake/Qt5Quick
                    -DQt5QuickControls2_DIR=${Qt5_DIR}/lib/cmake/Qt5QuickControls2
                    -DQt5Xml_DIR=${Qt5_DIR}/lib/cmake/Qt5Xml
                    -DQt5Svg_DIR=${Qt5_DIR}/lib/cmake/Qt5Svg
                    -DQt5Widgets_DIR=${Qt5_DIR}/lib/cmake/Qt5Widgets
                    -Wno-dev"
      - name: Build
        run:  cmake --build build
      - name: upload apk
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: build/noson-gui-arm64-v8a/build/outputs/apk/debug/noson-gui-arm64-v8a-debug.apk

  release:
    name: Release APK
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 1
          format: 'YYYY-MM-DD-HH-mm-ss'    
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: list directory output
        run: ls /home/runner/work/noson-app/noson-app/apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: Release ${{ steps.time.outputs.time }} 
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/noson-app/noson-app/apk
          asset_name: noson-gui-arm64-v8a-debug.apk
          asset_content_type: application/zip
